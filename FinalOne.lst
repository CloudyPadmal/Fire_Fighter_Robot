;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/02/2016 16:32:53
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF004EF1A  	GOTO        2100
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_IR_low:
;ir.h,111 :: 		void IR_low() {
;ir.h,114 :: 		SensorTRISA.B0 = INPUT;
0x001C	0x8092      	BSF         TRISA, 0 
;ir.h,115 :: 		SensorTRISA.B1 = INPUT;
0x001E	0x8292      	BSF         TRISA, 1 
;ir.h,116 :: 		SensorTRISA.B2 = INPUT;
0x0020	0x8492      	BSF         TRISA, 2 
;ir.h,117 :: 		SensorTRISA.B3 = INPUT;
0x0022	0x8692      	BSF         TRISA, 3 
;ir.h,118 :: 		SensorTRISA.B4 = INPUT;
0x0024	0x8892      	BSF         TRISA, 4 
;ir.h,119 :: 		SensorTRISA.B5 = INPUT;
0x0026	0x8A92      	BSF         TRISA, 5 
;ir.h,120 :: 		SensorTRISE.B0 = INPUT;
0x0028	0x8096      	BSF         TRISE, 0 
;ir.h,121 :: 		SensorTRISE.B1 = INPUT;
0x002A	0x8296      	BSF         TRISE, 1 
;ir.h,123 :: 		SensorLATA.B0 = LOW;
0x002C	0x9089      	BCF         LATA, 0 
;ir.h,124 :: 		SensorLATA.B1 = LOW;
0x002E	0x9289      	BCF         LATA, 1 
;ir.h,125 :: 		SensorLATA.B2 = LOW;
0x0030	0x9489      	BCF         LATA, 2 
;ir.h,126 :: 		SensorLATA.B3 = LOW;
0x0032	0x9689      	BCF         LATA, 3 
;ir.h,127 :: 		SensorLATA.B4 = LOW;
0x0034	0x9889      	BCF         LATA, 4 
;ir.h,128 :: 		SensorLATA.B5 = LOW;
0x0036	0x9A89      	BCF         LATA, 5 
;ir.h,129 :: 		SensorLATE.B0 = LOW;
0x0038	0x908D      	BCF         LATE, 0 
;ir.h,130 :: 		SensorLATE.B1 = LOW;
0x003A	0x928D      	BCF         LATE, 1 
;ir.h,131 :: 		}
L_end_IR_low:
0x003C	0x0012      	RETURN      0
; end of _IR_low
_sensor_assign:
;ir.h,134 :: 		void sensor_assign() {
;ir.h,136 :: 		sensor1 = SensorPORTA.B0;
0x003E	0x0E00      	MOVLW       0
0x0040	0xB080      	BTFSC       PORTA, 0 
0x0042	0x0E01      	MOVLW       1
0x0044	0x6E17      	MOVWF       _sensor1 
;ir.h,137 :: 		sensor2 = SensorPORTA.B1;
0x0046	0x0E00      	MOVLW       0
0x0048	0xB280      	BTFSC       PORTA, 1 
0x004A	0x0E01      	MOVLW       1
0x004C	0x6E19      	MOVWF       _sensor2 
;ir.h,138 :: 		sensor3 = SensorPORTA.B2;
0x004E	0x0E00      	MOVLW       0
0x0050	0xB480      	BTFSC       PORTA, 2 
0x0052	0x0E01      	MOVLW       1
0x0054	0x6E18      	MOVWF       _sensor3 
;ir.h,139 :: 		sensor4 = SensorPORTA.B3;
0x0056	0x0E00      	MOVLW       0
0x0058	0xB680      	BTFSC       PORTA, 3 
0x005A	0x0E01      	MOVLW       1
0x005C	0x6E25      	MOVWF       _sensor4 
;ir.h,140 :: 		sensor5 = SensorPORTA.B4;
0x005E	0x0E00      	MOVLW       0
0x0060	0xB880      	BTFSC       PORTA, 4 
0x0062	0x0E01      	MOVLW       1
0x0064	0x6E24      	MOVWF       _sensor5 
;ir.h,141 :: 		sensor6 = SensorPORTA.B5;
0x0066	0x0E00      	MOVLW       0
0x0068	0xBA80      	BTFSC       PORTA, 5 
0x006A	0x0E01      	MOVLW       1
0x006C	0x6E26      	MOVWF       _sensor6 
;ir.h,142 :: 		sensor7 = SensorPORTE.B0;
0x006E	0x0E00      	MOVLW       0
0x0070	0xB084      	BTFSC       PORTE, 0 
0x0072	0x0E01      	MOVLW       1
0x0074	0x6E28      	MOVWF       _sensor7 
;ir.h,143 :: 		sensor8 = SensorPORTE.B1;
0x0076	0x0E00      	MOVLW       0
0x0078	0xB284      	BTFSC       PORTE, 1 
0x007A	0x0E01      	MOVLW       1
0x007C	0x6E27      	MOVWF       _sensor8 
;ir.h,144 :: 		}
L_end_sensor_assign:
0x007E	0x0012      	RETURN      0
; end of _sensor_assign
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x0080	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0082	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0084	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0086	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0088	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x008A	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x008E	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0092	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0094	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0096	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x009A	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x009E	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x00A0	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x00A2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x00A4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x00A6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x00A8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x00AA	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x00AC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x00AE	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x00B0	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x00B2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x00B4	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x00B6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x00B8	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x00BA	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x00BC	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x00BE	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x00C2	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x00C6	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x00CA	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x00CE	0x0012      	RETURN      0
; end of _Mul_16X16_U
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x00D0	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x00D2	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x00D4	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
L_end_PWM1_Init:
0x00D6	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM2_Init:
;__Lib_PWM_c21.c,1 :: 		
;__Lib_PWM_c21.c,2 :: 		
;__Lib_PWM_c21.c,3 :: 		
0x00D8	0x6ABB      	CLRF        CCPR2L 
;__Lib_PWM_c21.c,4 :: 		
0x00DA	0x98BA      	BCF         CCP2CON, 4 
;__Lib_PWM_c21.c,5 :: 		
0x00DC	0x9ABA      	BCF         CCP2CON, 5 
;__Lib_PWM_c21.c,6 :: 		
L_end_PWM2_Init:
0x00DE	0x0012      	RETURN      0
; end of _PWM2_Init
_IR_high:
;ir.h,88 :: 		void IR_high() {
;ir.h,91 :: 		SensorTRISA.B0 = OUTPUT;
0x00E0	0x9092      	BCF         TRISA, 0 
;ir.h,92 :: 		SensorTRISA.B1 = OUTPUT;
0x00E2	0x9292      	BCF         TRISA, 1 
;ir.h,93 :: 		SensorTRISA.B2 = OUTPUT;
0x00E4	0x9492      	BCF         TRISA, 2 
;ir.h,94 :: 		SensorTRISA.B3 = OUTPUT;
0x00E6	0x9692      	BCF         TRISA, 3 
;ir.h,95 :: 		SensorTRISA.B4 = OUTPUT;
0x00E8	0x9892      	BCF         TRISA, 4 
;ir.h,96 :: 		SensorTRISA.B5 = OUTPUT;
0x00EA	0x9A92      	BCF         TRISA, 5 
;ir.h,97 :: 		SensorTRISE.B0 = OUTPUT;
0x00EC	0x9096      	BCF         TRISE, 0 
;ir.h,98 :: 		SensorTRISE.B1 = OUTPUT;
0x00EE	0x9296      	BCF         TRISE, 1 
;ir.h,100 :: 		SensorLATA.B0 = HIGH;
0x00F0	0x8089      	BSF         LATA, 0 
;ir.h,101 :: 		SensorLATA.B1 = HIGH;
0x00F2	0x8289      	BSF         LATA, 1 
;ir.h,102 :: 		SensorLATA.B2 = HIGH;
0x00F4	0x8489      	BSF         LATA, 2 
;ir.h,103 :: 		SensorLATA.B3 = HIGH;
0x00F6	0x8689      	BSF         LATA, 3 
;ir.h,104 :: 		SensorLATA.B4 = HIGH;
0x00F8	0x8889      	BSF         LATA, 4 
;ir.h,105 :: 		SensorLATA.B5 = HIGH;
0x00FA	0x8A89      	BSF         LATA, 5 
;ir.h,106 :: 		SensorLATE.B0 = HIGH;
0x00FC	0x808D      	BSF         LATE, 0 
;ir.h,107 :: 		SensorLATE.B1 = HIGH;
0x00FE	0x828D      	BSF         LATE, 1 
;ir.h,108 :: 		}
L_end_IR_high:
0x0100	0x0012      	RETURN      0
; end of _IR_high
_PWM2_Start:
;__Lib_PWM_c21.c,19 :: 		
;__Lib_PWM_c21.c,20 :: 		
0x0102	0x9294      	BCF         TRISC1_bit, BitPos(TRISC1_bit+0) 
;__Lib_PWM_c21.c,21 :: 		
0x0104	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,22 :: 		
0x0106	0x0E0C      	MOVLW       12
0x0108	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,23 :: 		
L_end_PWM2_Start:
0x010A	0x0012      	RETURN      0
; end of _PWM2_Start
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x010C	0x50CB      	MOVF        PR2, 0 
0x010E	0x0F01      	ADDLW       1
0x0110	0x6E00      	MOVWF       R0 
0x0112	0x6A01      	CLRF        R1 
0x0114	0x0E00      	MOVLW       0
0x0116	0x2201      	ADDWFC      R1, 1 
0x0118	0xF004C02A  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x011C	0x0E00      	MOVLW       0
0x011E	0x6E05      	MOVWF       R5 
0x0120	0xDFAF      	RCALL       _Mul_16X16_U
0x0122	0x0E06      	MOVLW       6
0x0124	0x6E02      	MOVWF       R2 
0x0126	0xF004C000  	MOVFF       R0, R4
0x012A	0xF005C001  	MOVFF       R1, R5
0x012E	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0x0130	0xE005      	BZ          L__PWM1_Set_Duty11
0x0132	0x3205      	RRCF        R5, 1 
0x0134	0x3204      	RRCF        R4, 1 
0x0136	0x9E05      	BCF         R5, 7 
0x0138	0x0FFF      	ADDLW       255
0x013A	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,48 :: 		
0x013C	0x0E04      	MOVLW       4
0x013E	0x6E01      	MOVWF       R1 
0x0140	0xF000C004  	MOVFF       R4, R0
0x0144	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0x0146	0xE004      	BZ          L__PWM1_Set_Duty13
0x0148	0x3600      	RLCF        R0, 1 
0x014A	0x9000      	BCF         R0, 0 
0x014C	0x0FFF      	ADDLW       255
0x014E	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x0150	0x0E30      	MOVLW       48
0x0152	0x1400      	ANDWF       R0, 0 
0x0154	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x0156	0xF000C004  	MOVFF       R4, R0
0x015A	0xF001C005  	MOVFF       R5, R1
0x015E	0x3201      	RRCF        R1, 1 
0x0160	0x3200      	RRCF        R0, 1 
0x0162	0x9E01      	BCF         R1, 7 
0x0164	0x3201      	RRCF        R1, 1 
0x0166	0x3200      	RRCF        R0, 1 
0x0168	0x9E01      	BCF         R1, 7 
0x016A	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x016E	0x0E0F      	MOVLW       15
0x0170	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x0172	0x5003      	MOVF        R3, 0 
0x0174	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
L_end_PWM1_Set_Duty:
0x0176	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_PWM2_Set_Duty:
;__Lib_PWM_c21.c,8 :: 		
;__Lib_PWM_c21.c,12 :: 		
0x0178	0x50CB      	MOVF        PR2, 0 
0x017A	0x0F01      	ADDLW       1
0x017C	0x6E00      	MOVWF       R0 
0x017E	0x6A01      	CLRF        R1 
0x0180	0x0E00      	MOVLW       0
0x0182	0x2201      	ADDWFC      R1, 1 
0x0184	0xF004C02A  	MOVFF       FARG_PWM2_Set_Duty_new_duty, R4
0x0188	0x0E00      	MOVLW       0
0x018A	0x6E05      	MOVWF       R5 
0x018C	0xDF79      	RCALL       _Mul_16X16_U
0x018E	0x0E06      	MOVLW       6
0x0190	0x6E02      	MOVWF       R2 
0x0192	0xF004C000  	MOVFF       R0, R4
0x0196	0xF005C001  	MOVFF       R1, R5
0x019A	0x5002      	MOVF        R2, 0 
L__PWM2_Set_Duty2:
0x019C	0xE005      	BZ          L__PWM2_Set_Duty3
0x019E	0x3205      	RRCF        R5, 1 
0x01A0	0x3204      	RRCF        R4, 1 
0x01A2	0x9E05      	BCF         R5, 7 
0x01A4	0x0FFF      	ADDLW       255
0x01A6	0xD7FA      	BRA         L__PWM2_Set_Duty2
L__PWM2_Set_Duty3:
;__Lib_PWM_c21.c,13 :: 		
0x01A8	0x0E04      	MOVLW       4
0x01AA	0x6E01      	MOVWF       R1 
0x01AC	0xF000C004  	MOVFF       R4, R0
0x01B0	0x5001      	MOVF        R1, 0 
L__PWM2_Set_Duty4:
0x01B2	0xE004      	BZ          L__PWM2_Set_Duty5
0x01B4	0x3600      	RLCF        R0, 1 
0x01B6	0x9000      	BCF         R0, 0 
0x01B8	0x0FFF      	ADDLW       255
0x01BA	0xD7FB      	BRA         L__PWM2_Set_Duty4
L__PWM2_Set_Duty5:
0x01BC	0x0E30      	MOVLW       48
0x01BE	0x1400      	ANDWF       R0, 0 
0x01C0	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,14 :: 		
0x01C2	0xF000C004  	MOVFF       R4, R0
0x01C6	0xF001C005  	MOVFF       R5, R1
0x01CA	0x3201      	RRCF        R1, 1 
0x01CC	0x3200      	RRCF        R0, 1 
0x01CE	0x9E01      	BCF         R1, 7 
0x01D0	0x3201      	RRCF        R1, 1 
0x01D2	0x3200      	RRCF        R0, 1 
0x01D4	0x9E01      	BCF         R1, 7 
0x01D6	0xFFBBC000  	MOVFF       R0, CCPR2L
;__Lib_PWM_c21.c,15 :: 		
0x01DA	0x0E0F      	MOVLW       15
0x01DC	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,16 :: 		
0x01DE	0x5003      	MOVF        R3, 0 
0x01E0	0x12BA      	IORWF       CCP2CON, 1 
;__Lib_PWM_c21.c,17 :: 		
L_end_PWM2_Set_Duty:
0x01E2	0x0012      	RETURN      0
; end of _PWM2_Set_Duty
_init_PWM:
;motor.h,94 :: 		void init_PWM() {
;motor.h,97 :: 		PWM1_init(PWM_f); // Left side wheel
0x01E4	0x90CA      	BCF         T2CON, 0, 0
0x01E6	0x92CA      	BCF         T2CON, 1, 0
0x01E8	0x0EC7      	MOVLW       199
0x01EA	0x6ECB      	MOVWF       PR2, 0
0x01EC	0xDF71      	RCALL       _PWM1_Init
;motor.h,98 :: 		PWM2_init(PWM_f); // Right side wheel
0x01EE	0x90CA      	BCF         T2CON, 0, 0
0x01F0	0x92CA      	BCF         T2CON, 1, 0
0x01F2	0x0EC7      	MOVLW       199
0x01F4	0x6ECB      	MOVWF       PR2, 0
0x01F6	0xDF70      	RCALL       _PWM2_Init
;motor.h,99 :: 		}
L_end_init_PWM:
0x01F8	0x0012      	RETURN      0
; end of _init_PWM
_IR_read:
;ir.h,147 :: 		void IR_read() {
;ir.h,150 :: 		IR_high();
0x01FA	0xDF72      	RCALL       _IR_high
;ir.h,152 :: 		Delay_us(15);
0x01FC	0x0E04      	MOVLW       4
0x01FE	0x6E0D      	MOVWF       R13, 0
L_IR_read39:
0x0200	0x2E0D      	DECFSZ      R13, 1, 0
0x0202	0xD7FE      	BRA         L_IR_read39
0x0204	0x0000      	NOP
0x0206	0x0000      	NOP
;ir.h,155 :: 		IR_low();
0x0208	0xDF09      	RCALL       _IR_low
;ir.h,158 :: 		Delay_us(750);
0x020A	0x0EF9      	MOVLW       249
0x020C	0x6E0D      	MOVWF       R13, 0
L_IR_read40:
0x020E	0x2E0D      	DECFSZ      R13, 1, 0
0x0210	0xD7FE      	BRA         L_IR_read40
0x0212	0x0000      	NOP
0x0214	0x0000      	NOP
;ir.h,161 :: 		sensor_assign();
0x0216	0xDF13      	RCALL       _sensor_assign
;ir.h,162 :: 		}
L_end_IR_read:
0x0218	0x0012      	RETURN      0
; end of _IR_read
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x021A	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c21.c,56 :: 		
0x021C	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x021E	0x0E0C      	MOVLW       12
0x0220	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
L_end_PWM1_Start:
0x0222	0x0012      	RETURN      0
; end of _PWM1_Start
_PWM1_Stop:
;__Lib_PWM_c21.c,60 :: 		
;__Lib_PWM_c21.c,61 :: 		
0x0224	0x8494      	BSF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c21.c,62 :: 		
0x0226	0x94CA      	BCF         T2CON, 2 
;__Lib_PWM_c21.c,63 :: 		
0x0228	0x0EF0      	MOVLW       240
0x022A	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,64 :: 		
L_end_PWM1_Stop:
0x022C	0x0012      	RETURN      0
; end of _PWM1_Stop
_PWM2_Stop:
;__Lib_PWM_c21.c,25 :: 		
;__Lib_PWM_c21.c,26 :: 		
0x022E	0x8294      	BSF         TRISC1_bit, BitPos(TRISC1_bit+0) 
;__Lib_PWM_c21.c,27 :: 		
0x0230	0x94CA      	BCF         T2CON, 2 
;__Lib_PWM_c21.c,28 :: 		
0x0232	0x0EF0      	MOVLW       240
0x0234	0x16BA      	ANDWF       CCP2CON, 1 
;__Lib_PWM_c21.c,29 :: 		
L_end_PWM2_Stop:
0x0236	0x0012      	RETURN      0
; end of _PWM2_Stop
_Trigger_1:
;sonar.h,89 :: 		void Trigger_1() {
;sonar.h,92 :: 		Sonar1TRIG_LAT = HIGH;
0x0238	0x828A      	BSF         LATB, 1 
;sonar.h,94 :: 		Delay_us(15);
0x023A	0x0E04      	MOVLW       4
0x023C	0x6E0D      	MOVWF       R13, 0
L_Trigger_10:
0x023E	0x2E0D      	DECFSZ      R13, 1, 0
0x0240	0xD7FE      	BRA         L_Trigger_10
0x0242	0x0000      	NOP
0x0244	0x0000      	NOP
;sonar.h,96 :: 		Sonar1TRIG_LAT = LOW;
0x0246	0x928A      	BCF         LATB, 1 
;sonar.h,97 :: 		}
L_end_Trigger_1:
0x0248	0x0012      	RETURN      0
; end of _Trigger_1
_Trigger_2:
;sonar.h,100 :: 		void Trigger_2() {
;sonar.h,103 :: 		Sonar2TRIG_LAT = HIGH;
0x024A	0x868A      	BSF         LATB, 3 
;sonar.h,105 :: 		Delay_us(15);
0x024C	0x0E04      	MOVLW       4
0x024E	0x6E0D      	MOVWF       R13, 0
L_Trigger_21:
0x0250	0x2E0D      	DECFSZ      R13, 1, 0
0x0252	0xD7FE      	BRA         L_Trigger_21
0x0254	0x0000      	NOP
0x0256	0x0000      	NOP
;sonar.h,107 :: 		Sonar2TRIG_LAT = LOW;
0x0258	0x968A      	BCF         LATB, 3 
;sonar.h,108 :: 		}
L_end_Trigger_2:
0x025A	0x0012      	RETURN      0
; end of _Trigger_2
_init_sensor:
;ir.h,77 :: 		void init_sensor() {
;ir.h,80 :: 		LEDpath = OUTPUT;
0x025C	0x9495      	BCF         TRISD, 2 
;ir.h,81 :: 		SensorON = ON;
0x025E	0x848C      	BSF         LATD, 2 
;ir.h,83 :: 		ANSEL0 = 0x00;
0x0260	0x6AB8      	CLRF        ANSEL0 
;ir.h,84 :: 		ANSEL1 = 0;
0x0262	0x6AB9      	CLRF        ANSEL1 
;ir.h,85 :: 		}
L_end_init_sensor:
0x0264	0x0012      	RETURN      0
; end of _init_sensor
_stop_motor:
;motor.h,123 :: 		void stop_motor() {
;motor.h,125 :: 		PWM1_Stop();
0x0266	0xDFDE      	RCALL       _PWM1_Stop
;motor.h,126 :: 		PWM2_Stop();
0x0268	0xDFE2      	RCALL       _PWM2_Stop
;motor.h,128 :: 		Motor1A = OFF;
0x026A	0x928C      	BCF         LATD, 1 
;motor.h,129 :: 		Motor1B = OFF;
0x026C	0x908C      	BCF         LATD, 0 
;motor.h,130 :: 		Motor2A = OFF;
0x026E	0x968B      	BCF         LATC, 3 
;motor.h,131 :: 		Motor2B = OFF;
0x0270	0x908B      	BCF         LATC, 0 
;motor.h,132 :: 		}
L_end_stop_motor:
0x0272	0x0012      	RETURN      0
; end of _stop_motor
_turn:
;motor.h,150 :: 		void turn(short side) {
;motor.h,152 :: 		if (side == right) {
0x0274	0x5029      	MOVF        FARG_turn_side, 0 
0x0276	0x0A01      	XORLW       1
0x0278	0xE109      	BNZ         L_turn68
;motor.h,154 :: 		Motor1A = OFF;
0x027A	0x928C      	BCF         LATD, 1 
;motor.h,155 :: 		Motor1B = OFF;
0x027C	0x908C      	BCF         LATD, 0 
;motor.h,156 :: 		Motor2A = ON;
0x027E	0x868B      	BSF         LATC, 3 
;motor.h,157 :: 		Motor2B = OFF;
0x0280	0x908B      	BCF         LATC, 0 
;motor.h,158 :: 		PWM1_Start();
0x0282	0xDFCB      	RCALL       _PWM1_Start
;motor.h,159 :: 		PWM1_Set_Duty(150);
0x0284	0x0E96      	MOVLW       150
0x0286	0x6E2A      	MOVWF       FARG_PWM1_Set_Duty_new_duty 
0x0288	0xDF41      	RCALL       _PWM1_Set_Duty
;motor.h,160 :: 		}
0x028A	0xD00B      	BRA         L_turn69
L_turn68:
;motor.h,161 :: 		else if (side == left) {
0x028C	0x5029      	MOVF        FARG_turn_side, 0 
0x028E	0x0A00      	XORLW       0
0x0290	0xE108      	BNZ         L_turn70
;motor.h,163 :: 		Motor1A = ON;
0x0292	0x828C      	BSF         LATD, 1 
;motor.h,164 :: 		Motor1B = OFF;
0x0294	0x908C      	BCF         LATD, 0 
;motor.h,165 :: 		Motor2A = OFF;
0x0296	0x968B      	BCF         LATC, 3 
;motor.h,166 :: 		Motor2B = OFF;
0x0298	0x908B      	BCF         LATC, 0 
;motor.h,167 :: 		PWM2_Start();
0x029A	0xDF33      	RCALL       _PWM2_Start
;motor.h,168 :: 		PWM2_Set_Duty(150);
0x029C	0x0E96      	MOVLW       150
0x029E	0x6E2A      	MOVWF       FARG_PWM2_Set_Duty_new_duty 
0x02A0	0xDF6B      	RCALL       _PWM2_Set_Duty
;motor.h,169 :: 		}
L_turn70:
L_turn69:
;motor.h,170 :: 		}
L_end_turn:
0x02A2	0x0012      	RETURN      0
; end of _turn
_init_motor:
;motor.h,102 :: 		void init_motor() {
;motor.h,105 :: 		Motor1ATRIS = OUTPUT;
0x02A4	0x9295      	BCF         TRISD, 1 
;motor.h,106 :: 		Motor1BTRIS = OUTPUT;
0x02A6	0x9095      	BCF         TRISD, 0 
;motor.h,107 :: 		Motor2ATRIS = OUTPUT;
0x02A8	0x9694      	BCF         TRISC, 3 
;motor.h,108 :: 		Motor2BTRIS = OUTPUT;
0x02AA	0x9094      	BCF         TRISC, 0 
;motor.h,111 :: 		Motor1TRIS = OUTPUT;
0x02AC	0x9294      	BCF         TRISC, 1 
;motor.h,112 :: 		Motor2TRIS = OUTPUT;
0x02AE	0x9494      	BCF         TRISC, 2 
;motor.h,115 :: 		init_PWM();
0x02B0	0xDF99      	RCALL       _init_PWM
;motor.h,118 :: 		FanRENTRIS = OUTPUT;
0x02B2	0x9895      	BCF         TRISD, 4 
;motor.h,119 :: 		FanLENTRIS = OUTPUT;
0x02B4	0x9A95      	BCF         TRISD, 5 
;motor.h,120 :: 		}
L_end_init_motor:
0x02B6	0x0012      	RETURN      0
; end of _init_motor
_move_forth:
;motor.h,135 :: 		void move_forth() {
;motor.h,137 :: 		Motor1A = ON;
0x02B8	0x828C      	BSF         LATD, 1 
;motor.h,138 :: 		Motor1B = OFF;
0x02BA	0x908C      	BCF         LATD, 0 
;motor.h,139 :: 		Motor2A = ON;
0x02BC	0x868B      	BSF         LATC, 3 
;motor.h,140 :: 		Motor2B = OFF;
0x02BE	0x908B      	BCF         LATC, 0 
;motor.h,142 :: 		PWM1_Start();
0x02C0	0xDFAC      	RCALL       _PWM1_Start
;motor.h,143 :: 		PWM2_Start();
0x02C2	0xDF1F      	RCALL       _PWM2_Start
;motor.h,145 :: 		PWM1_Set_Duty(Normal_speed);
0x02C4	0x0E64      	MOVLW       100
0x02C6	0x6E2A      	MOVWF       FARG_PWM1_Set_Duty_new_duty 
0x02C8	0xDF21      	RCALL       _PWM1_Set_Duty
;motor.h,146 :: 		PWM2_Set_Duty(Normal_speed);
0x02CA	0x0E64      	MOVLW       100
0x02CC	0x6E2A      	MOVWF       FARG_PWM2_Set_Duty_new_duty 
0x02CE	0xDF54      	RCALL       _PWM2_Set_Duty
;motor.h,147 :: 		}
L_end_move_forth:
0x02D0	0x0012      	RETURN      0
; end of _move_forth
_fan_job:
;motor.h,211 :: 		void fan_job(short side) {
;motor.h,213 :: 		switch (side) {
0x02D2	0xD037      	BRA         L_fan_job74
;motor.h,215 :: 		case 0 :
L_fan_job76:
;motor.h,216 :: 		FanL = ON;
0x02D4	0x8A8C      	BSF         LATD, 5 
;motor.h,217 :: 		FanR = OFF;
0x02D6	0x988C      	BCF         LATD, 4 
;motor.h,218 :: 		Delay_ms(4000);
0x02D8	0x0E15      	MOVLW       21
0x02DA	0x6E0B      	MOVWF       R11, 0
0x02DC	0x0E4B      	MOVLW       75
0x02DE	0x6E0C      	MOVWF       R12, 0
0x02E0	0x0EBE      	MOVLW       190
0x02E2	0x6E0D      	MOVWF       R13, 0
L_fan_job77:
0x02E4	0x2E0D      	DECFSZ      R13, 1, 0
0x02E6	0xD7FE      	BRA         L_fan_job77
0x02E8	0x2E0C      	DECFSZ      R12, 1, 0
0x02EA	0xD7FC      	BRA         L_fan_job77
0x02EC	0x2E0B      	DECFSZ      R11, 1, 0
0x02EE	0xD7FA      	BRA         L_fan_job77
0x02F0	0x0000      	NOP
;motor.h,219 :: 		FanL = OFF;
0x02F2	0x9A8C      	BCF         LATD, 5 
;motor.h,220 :: 		break;
0x02F4	0xD030      	BRA         L_fan_job75
;motor.h,222 :: 		case 1 :
L_fan_job78:
;motor.h,223 :: 		FanL = OFF;
0x02F6	0x9A8C      	BCF         LATD, 5 
;motor.h,224 :: 		FanR = ON;
0x02F8	0x888C      	BSF         LATD, 4 
;motor.h,225 :: 		Delay_ms(4000);
0x02FA	0x0E15      	MOVLW       21
0x02FC	0x6E0B      	MOVWF       R11, 0
0x02FE	0x0E4B      	MOVLW       75
0x0300	0x6E0C      	MOVWF       R12, 0
0x0302	0x0EBE      	MOVLW       190
0x0304	0x6E0D      	MOVWF       R13, 0
L_fan_job79:
0x0306	0x2E0D      	DECFSZ      R13, 1, 0
0x0308	0xD7FE      	BRA         L_fan_job79
0x030A	0x2E0C      	DECFSZ      R12, 1, 0
0x030C	0xD7FC      	BRA         L_fan_job79
0x030E	0x2E0B      	DECFSZ      R11, 1, 0
0x0310	0xD7FA      	BRA         L_fan_job79
0x0312	0x0000      	NOP
;motor.h,226 :: 		FanR = OFF;
0x0314	0x988C      	BCF         LATD, 4 
;motor.h,227 :: 		break;
0x0316	0xD01F      	BRA         L_fan_job75
;motor.h,229 :: 		case 2 :
L_fan_job80:
;motor.h,230 :: 		FanL = ON;
0x0318	0x8A8C      	BSF         LATD, 5 
;motor.h,231 :: 		FanR = ON;
0x031A	0x888C      	BSF         LATD, 4 
;motor.h,232 :: 		Delay_ms(4000);
0x031C	0x0E15      	MOVLW       21
0x031E	0x6E0B      	MOVWF       R11, 0
0x0320	0x0E4B      	MOVLW       75
0x0322	0x6E0C      	MOVWF       R12, 0
0x0324	0x0EBE      	MOVLW       190
0x0326	0x6E0D      	MOVWF       R13, 0
L_fan_job81:
0x0328	0x2E0D      	DECFSZ      R13, 1, 0
0x032A	0xD7FE      	BRA         L_fan_job81
0x032C	0x2E0C      	DECFSZ      R12, 1, 0
0x032E	0xD7FC      	BRA         L_fan_job81
0x0330	0x2E0B      	DECFSZ      R11, 1, 0
0x0332	0xD7FA      	BRA         L_fan_job81
0x0334	0x0000      	NOP
;motor.h,233 :: 		FanR = OFF;
0x0336	0x988C      	BCF         LATD, 4 
;motor.h,234 :: 		FanL = OFF;
0x0338	0x9A8C      	BCF         LATD, 5 
;motor.h,235 :: 		break;
0x033A	0xD00D      	BRA         L_fan_job75
;motor.h,237 :: 		default :
L_fan_job82:
;motor.h,238 :: 		FanR = OFF;
0x033C	0x988C      	BCF         LATD, 4 
;motor.h,239 :: 		FanL = OFF;
0x033E	0x9A8C      	BCF         LATD, 5 
;motor.h,240 :: 		break;
0x0340	0xD00A      	BRA         L_fan_job75
;motor.h,241 :: 		}
L_fan_job74:
0x0342	0x5029      	MOVF        FARG_fan_job_side, 0 
0x0344	0x0A00      	XORLW       0
0x0346	0xE0C6      	BZ          L_fan_job76
0x0348	0x5029      	MOVF        FARG_fan_job_side, 0 
0x034A	0x0A01      	XORLW       1
0x034C	0xE0D4      	BZ          L_fan_job78
0x034E	0x5029      	MOVF        FARG_fan_job_side, 0 
0x0350	0x0A02      	XORLW       2
0x0352	0xE0E2      	BZ          L_fan_job80
0x0354	0xD7F3      	BRA         L_fan_job82
L_fan_job75:
;motor.h,242 :: 		}
L_end_fan_job:
0x0356	0x0012      	RETURN      0
; end of _fan_job
_position:
;ir.h,165 :: 		signed short position() {
;ir.h,188 :: 		IR_read();
0x0358	0xDF50      	RCALL       _IR_read
;ir.h,190 :: 		pos = sensor1 * 1 + sensor2 * 3 + sensor3 * 5 + sensor4 * 7 +
0x035A	0xF015C017  	MOVFF       _sensor1, _pos
0x035E	0x0E03      	MOVLW       3
0x0360	0x0219      	MULWF       _sensor2 
0x0362	0xF000CFF3  	MOVFF       PRODL, R0
0x0366	0x5000      	MOVF        R0, 0 
0x0368	0x2417      	ADDWF       _sensor1, 0 
0x036A	0x6E15      	MOVWF       _pos 
0x036C	0x0E05      	MOVLW       5
0x036E	0x0218      	MULWF       _sensor3 
0x0370	0xF000CFF3  	MOVFF       PRODL, R0
0x0374	0x5000      	MOVF        R0, 0 
0x0376	0x2615      	ADDWF       _pos, 1 
0x0378	0x0E07      	MOVLW       7
0x037A	0x0225      	MULWF       _sensor4 
0x037C	0xF000CFF3  	MOVFF       PRODL, R0
0x0380	0x5000      	MOVF        R0, 0 
0x0382	0x2615      	ADDWF       _pos, 1 
;ir.h,191 :: 		sensor5 * 11 + sensor6 * 13 + sensor7 * 15 + sensor8 * 17;
0x0384	0x0E0B      	MOVLW       11
0x0386	0x0224      	MULWF       _sensor5 
0x0388	0xF000CFF3  	MOVFF       PRODL, R0
0x038C	0x5000      	MOVF        R0, 0 
0x038E	0x2615      	ADDWF       _pos, 1 
0x0390	0x0E0D      	MOVLW       13
0x0392	0x0226      	MULWF       _sensor6 
0x0394	0xF000CFF3  	MOVFF       PRODL, R0
0x0398	0x5000      	MOVF        R0, 0 
0x039A	0x2615      	ADDWF       _pos, 1 
0x039C	0x0E0F      	MOVLW       15
0x039E	0x0228      	MULWF       _sensor7 
0x03A0	0xF000CFF3  	MOVFF       PRODL, R0
0x03A4	0x5000      	MOVF        R0, 0 
0x03A6	0x2615      	ADDWF       _pos, 1 
0x03A8	0x0E11      	MOVLW       17
0x03AA	0x0227      	MULWF       _sensor8 
0x03AC	0xF000CFF3  	MOVFF       PRODL, R0
0x03B0	0x5000      	MOVF        R0, 0 
0x03B2	0x2615      	ADDWF       _pos, 1 
;ir.h,193 :: 		switch(pos) {
0x03B4	0xD02C      	BRA         L_position41
;ir.h,195 :: 		case 36 : pos_val = 0; break;
L_position43:
0x03B6	0x6A22      	CLRF        _pos_val 
0x03B8	0xD058      	BRA         L_position42
;ir.h,196 :: 		case 41 : pos_val = 0; break;
L_position44:
0x03BA	0x6A22      	CLRF        _pos_val 
0x03BC	0xD056      	BRA         L_position42
;ir.h,197 :: 		case 49 : pos_val = 0; break;
L_position45:
0x03BE	0x6A22      	CLRF        _pos_val 
0x03C0	0xD054      	BRA         L_position42
;ir.h,198 :: 		case 46 : pos_val = 1; break;
L_position46:
0x03C2	0x0E01      	MOVLW       1
0x03C4	0x6E22      	MOVWF       _pos_val 
0x03C6	0xD051      	BRA         L_position42
;ir.h,199 :: 		case 57 : pos_val = 1; break;
L_position47:
0x03C8	0x0E01      	MOVLW       1
0x03CA	0x6E22      	MOVWF       _pos_val 
0x03CC	0xD04E      	BRA         L_position42
;ir.h,200 :: 		case 56 : pos_val = 2; break;
L_position48:
0x03CE	0x0E02      	MOVLW       2
0x03D0	0x6E22      	MOVWF       _pos_val 
0x03D2	0xD04B      	BRA         L_position42
;ir.h,201 :: 		case 63 : pos_val = 2; break;
L_position49:
0x03D4	0x0E02      	MOVLW       2
0x03D6	0x6E22      	MOVWF       _pos_val 
0x03D8	0xD048      	BRA         L_position42
;ir.h,202 :: 		case 68 : pos_val = 3; break;
L_position50:
0x03DA	0x0E03      	MOVLW       3
0x03DC	0x6E22      	MOVWF       _pos_val 
0x03DE	0xD045      	BRA         L_position42
;ir.h,203 :: 		case 71 : pos_val = 4; break;
L_position51:
0x03E0	0x0E04      	MOVLW       4
0x03E2	0x6E22      	MOVWF       _pos_val 
0x03E4	0xD042      	BRA         L_position42
;ir.h,204 :: 		case 26 : pos_val = -1; break;
L_position52:
0x03E6	0x0EFF      	MOVLW       255
0x03E8	0x6E22      	MOVWF       _pos_val 
0x03EA	0xD03F      	BRA         L_position42
;ir.h,205 :: 		case 33 : pos_val = -1; break;
L_position53:
0x03EC	0x0EFF      	MOVLW       255
0x03EE	0x6E22      	MOVWF       _pos_val 
0x03F0	0xD03C      	BRA         L_position42
;ir.h,206 :: 		case 27 : pos_val = -2; break;
L_position54:
0x03F2	0x0EFE      	MOVLW       254
0x03F4	0x6E22      	MOVWF       _pos_val 
0x03F6	0xD039      	BRA         L_position42
;ir.h,207 :: 		case 16 : pos_val = -2; break;
L_position55:
0x03F8	0x0EFE      	MOVLW       254
0x03FA	0x6E22      	MOVWF       _pos_val 
0x03FC	0xD036      	BRA         L_position42
;ir.h,208 :: 		case 40 : pos_val = -3; break;
L_position56:
0x03FE	0x0EFD      	MOVLW       253
0x0400	0x6E22      	MOVWF       _pos_val 
0x0402	0xD033      	BRA         L_position42
;ir.h,209 :: 		case 55 : pos_val = -4; break;
L_position57:
0x0404	0x0EFC      	MOVLW       252
0x0406	0x6E22      	MOVWF       _pos_val 
0x0408	0xD030      	BRA         L_position42
;ir.h,210 :: 		default : pos_val = 0;
L_position58:
0x040A	0x6A22      	CLRF        _pos_val 
;ir.h,211 :: 		}
0x040C	0xD02E      	BRA         L_position42
L_position41:
0x040E	0x5015      	MOVF        _pos, 0 
0x0410	0x0A24      	XORLW       36
0x0412	0xE0D1      	BZ          L_position43
0x0414	0x5015      	MOVF        _pos, 0 
0x0416	0x0A29      	XORLW       41
0x0418	0xE0D0      	BZ          L_position44
0x041A	0x5015      	MOVF        _pos, 0 
0x041C	0x0A31      	XORLW       49
0x041E	0xE0CF      	BZ          L_position45
0x0420	0x5015      	MOVF        _pos, 0 
0x0422	0x0A2E      	XORLW       46
0x0424	0xE0CE      	BZ          L_position46
0x0426	0x5015      	MOVF        _pos, 0 
0x0428	0x0A39      	XORLW       57
0x042A	0xE0CE      	BZ          L_position47
0x042C	0x5015      	MOVF        _pos, 0 
0x042E	0x0A38      	XORLW       56
0x0430	0xE0CE      	BZ          L_position48
0x0432	0x5015      	MOVF        _pos, 0 
0x0434	0x0A3F      	XORLW       63
0x0436	0xE0CE      	BZ          L_position49
0x0438	0x5015      	MOVF        _pos, 0 
0x043A	0x0A44      	XORLW       68
0x043C	0xE0CE      	BZ          L_position50
0x043E	0x5015      	MOVF        _pos, 0 
0x0440	0x0A47      	XORLW       71
0x0442	0xE0CE      	BZ          L_position51
0x0444	0x5015      	MOVF        _pos, 0 
0x0446	0x0A1A      	XORLW       26
0x0448	0xE0CE      	BZ          L_position52
0x044A	0x5015      	MOVF        _pos, 0 
0x044C	0x0A21      	XORLW       33
0x044E	0xE0CE      	BZ          L_position53
0x0450	0x5015      	MOVF        _pos, 0 
0x0452	0x0A1B      	XORLW       27
0x0454	0xE0CE      	BZ          L_position54
0x0456	0x5015      	MOVF        _pos, 0 
0x0458	0x0A10      	XORLW       16
0x045A	0xE0CE      	BZ          L_position55
0x045C	0x5015      	MOVF        _pos, 0 
0x045E	0x0A28      	XORLW       40
0x0460	0xE0CE      	BZ          L_position56
0x0462	0x5015      	MOVF        _pos, 0 
0x0464	0x0A37      	XORLW       55
0x0466	0xE0CE      	BZ          L_position57
0x0468	0xD7D0      	BRA         L_position58
L_position42:
;ir.h,212 :: 		return pos_val;
0x046A	0xF000C022  	MOVFF       _pos_val, R0
;ir.h,213 :: 		}
L_end_position:
0x046E	0x0012      	RETURN      0
; end of _position
_accelerate:
;motor.h,245 :: 		void accelerate() {
;motor.h,247 :: 		Motor1A = ON;
0x0470	0x828C      	BSF         LATD, 1 
;motor.h,248 :: 		Motor1B = OFF;
0x0472	0x908C      	BCF         LATD, 0 
;motor.h,249 :: 		Motor2A = ON;
0x0474	0x868B      	BSF         LATC, 3 
;motor.h,250 :: 		Motor2B = OFF;
0x0476	0x908B      	BCF         LATC, 0 
;motor.h,252 :: 		PWM1_Start();
0x0478	0xDED0      	RCALL       _PWM1_Start
;motor.h,253 :: 		PWM2_Start();
0x047A	0xDE43      	RCALL       _PWM2_Start
;motor.h,255 :: 		PWM1_Set_Duty(180);
0x047C	0x0EB4      	MOVLW       180
0x047E	0x6E2A      	MOVWF       FARG_PWM1_Set_Duty_new_duty 
0x0480	0xDE45      	RCALL       _PWM1_Set_Duty
;motor.h,256 :: 		PWM2_Set_Duty(180);
0x0482	0x0EB4      	MOVLW       180
0x0484	0x6E2A      	MOVWF       FARG_PWM2_Set_Duty_new_duty 
0x0486	0xDE78      	RCALL       _PWM2_Set_Duty
;motor.h,258 :: 		Delay_ms(10);
0x0488	0x0E0D      	MOVLW       13
0x048A	0x6E0C      	MOVWF       R12, 0
0x048C	0x0EFB      	MOVLW       251
0x048E	0x6E0D      	MOVWF       R13, 0
L_accelerate83:
0x0490	0x2E0D      	DECFSZ      R13, 1, 0
0x0492	0xD7FE      	BRA         L_accelerate83
0x0494	0x2E0C      	DECFSZ      R12, 1, 0
0x0496	0xD7FC      	BRA         L_accelerate83
0x0498	0x0000      	NOP
0x049A	0x0000      	NOP
;motor.h,259 :: 		}
L_end_accelerate:
0x049C	0x0012      	RETURN      0
; end of _accelerate
_check_right:
;sonar.h,123 :: 		short check_right() {
;sonar.h,126 :: 		T1CON = 0b00010000;
0x049E	0x0E10      	MOVLW       16
0x04A0	0x6ECD      	MOVWF       T1CON 
;sonar.h,127 :: 		right_flag = 0; j = 0;
0x04A2	0x6A1D      	CLRF        _right_flag 
0x04A4	0x6A16      	CLRF        _j 
;sonar.h,129 :: 		while (j < 5) {
L_check_right3:
0x04A6	0x0E80      	MOVLW       128
0x04A8	0x1816      	XORWF       _j, 0 
0x04AA	0x6E00      	MOVWF       R0 
0x04AC	0x0E80      	MOVLW       128
0x04AE	0x0A05      	XORLW       5
0x04B0	0x5C00      	SUBWF       R0, 0 
0x04B2	0xE223      	BC          L_check_right4
;sonar.h,132 :: 		while (Sonar1ECHO_PORT == 1) {asm nop;}
L_check_right5:
0x04B4	0xA081      	BTFSS       PORTB, 0 
0x04B6	0xD002      	BRA         L_check_right6
0x04B8	0x0000      	NOP
0x04BA	0xD7FC      	BRA         L_check_right5
L_check_right6:
;sonar.h,135 :: 		Trigger_1();
0x04BC	0xDEBD      	RCALL       _Trigger_1
;sonar.h,138 :: 		while (Sonar1ECHO_PORT == 0) {asm nop;}
L_check_right7:
0x04BE	0xB081      	BTFSC       PORTB, 0 
0x04C0	0xD002      	BRA         L_check_right8
0x04C2	0x0000      	NOP
0x04C4	0xD7FC      	BRA         L_check_right7
L_check_right8:
;sonar.h,141 :: 		T1CON.TMR1ON = 0;
0x04C6	0x90CD      	BCF         T1CON, 0 
;sonar.h,142 :: 		TMR1H = 0x00; TMR1L = 0x00;
0x04C8	0x6ACF      	CLRF        TMR1H 
0x04CA	0x6ACE      	CLRF        TMR1L 
;sonar.h,143 :: 		T1CON.TMR1ON = 1;
0x04CC	0x80CD      	BSF         T1CON, 0 
;sonar.h,145 :: 		while ((TMR1H << 8 | TMR1L) < CM40) {
L_check_right9:
0x04CE	0xF001CFCF  	MOVFF       TMR1H, R1
0x04D2	0x6A00      	CLRF        R0 
0x04D4	0x50CE      	MOVF        TMR1L, 0 
0x04D6	0x1000      	IORWF       R0, 0 
0x04D8	0x6E02      	MOVWF       R2 
0x04DA	0xF003C001  	MOVFF       R1, R3
0x04DE	0x0E00      	MOVLW       0
0x04E0	0x1203      	IORWF       R3, 1 
0x04E2	0x0E04      	MOVLW       4
0x04E4	0x5C03      	SUBWF       R3, 0 
0x04E6	0xE102      	BNZ         L__check_right155
0x04E8	0x0E7E      	MOVLW       126
0x04EA	0x5C02      	SUBWF       R2, 0 
L__check_right155:
0x04EC	0xE204      	BC          L_check_right10
;sonar.h,146 :: 		if (Sonar1ECHO_PORT == 1) {continue;}
0x04EE	0xA081      	BTFSS       PORTB, 0 
0x04F0	0xD001      	BRA         L_check_right11
0x04F2	0xD7ED      	BRA         L_check_right9
L_check_right11:
;sonar.h,149 :: 		right_flag++;
0x04F4	0x2A1D      	INCF        _right_flag, 1 
;sonar.h,152 :: 		}
L_check_right10:
;sonar.h,153 :: 		j++;
0x04F6	0x2A16      	INCF        _j, 1 
;sonar.h,154 :: 		}
0x04F8	0xD7D6      	BRA         L_check_right3
L_check_right4:
;sonar.h,156 :: 		if (right_flag > 2) {
0x04FA	0x0E80      	MOVLW       128
0x04FC	0x0A02      	XORLW       2
0x04FE	0x6E00      	MOVWF       R0 
0x0500	0x0E80      	MOVLW       128
0x0502	0x181D      	XORWF       _right_flag, 0 
0x0504	0x5C00      	SUBWF       R0, 0 
0x0506	0xE203      	BC          L_check_right13
;sonar.h,157 :: 		return 1;
0x0508	0x0E01      	MOVLW       1
0x050A	0x6E00      	MOVWF       R0 
0x050C	0xD001      	BRA         L_end_check_right
;sonar.h,158 :: 		} else {
L_check_right13:
;sonar.h,159 :: 		return 0;
0x050E	0x6A00      	CLRF        R0 
;sonar.h,161 :: 		}
L_end_check_right:
0x0510	0x0012      	RETURN      0
; end of _check_right
_init_sonar:
;sonar.h,71 :: 		void init_sonar() {
;sonar.h,74 :: 		Sonar1ECHO_TRIS = INPUT;
0x0512	0x8093      	BSF         TRISB, 0 
;sonar.h,76 :: 		Sonar2ECHO_TRIS = INPUT;
0x0514	0x8493      	BSF         TRISB, 2 
;sonar.h,78 :: 		Sonar3ECHO_TRIS = INPUT;
0x0516	0x8893      	BSF         TRISB, 4 
;sonar.h,81 :: 		Sonar1TRIG_TRIS = OUTPUT;
0x0518	0x9293      	BCF         TRISB, 1 
;sonar.h,83 :: 		Sonar2TRIG_TRIS = OUTPUT;
0x051A	0x9693      	BCF         TRISB, 3 
;sonar.h,85 :: 		Sonar3TRIG_TRIS = OUTPUT;
0x051C	0x9A93      	BCF         TRISB, 5 
;sonar.h,86 :: 		}
L_end_init_sonar:
0x051E	0x0012      	RETURN      0
; end of _init_sonar
_check_left:
;sonar.h,164 :: 		short check_left() {
;sonar.h,167 :: 		T1CON = 0b00010000;
0x0520	0x0E10      	MOVLW       16
0x0522	0x6ECD      	MOVWF       T1CON 
;sonar.h,168 :: 		left_flag = 0; i = 0;
0x0524	0x6A1C      	CLRF        _left_flag 
0x0526	0x6A1E      	CLRF        _i 
;sonar.h,170 :: 		while (i < 5) {
L_check_left15:
0x0528	0x0E80      	MOVLW       128
0x052A	0x181E      	XORWF       _i, 0 
0x052C	0x6E00      	MOVWF       R0 
0x052E	0x0E80      	MOVLW       128
0x0530	0x0A05      	XORLW       5
0x0532	0x5C00      	SUBWF       R0, 0 
0x0534	0xE223      	BC          L_check_left16
;sonar.h,173 :: 		while (Sonar2ECHO_PORT == 1) {asm nop;}
L_check_left17:
0x0536	0xA481      	BTFSS       PORTB, 2 
0x0538	0xD002      	BRA         L_check_left18
0x053A	0x0000      	NOP
0x053C	0xD7FC      	BRA         L_check_left17
L_check_left18:
;sonar.h,176 :: 		Trigger_2();
0x053E	0xDE85      	RCALL       _Trigger_2
;sonar.h,179 :: 		while (Sonar2ECHO_PORT == 0) {asm nop;}
L_check_left19:
0x0540	0xB481      	BTFSC       PORTB, 2 
0x0542	0xD002      	BRA         L_check_left20
0x0544	0x0000      	NOP
0x0546	0xD7FC      	BRA         L_check_left19
L_check_left20:
;sonar.h,182 :: 		T1CON.TMR1ON = 0;
0x0548	0x90CD      	BCF         T1CON, 0 
;sonar.h,183 :: 		TMR1H = 0x00; TMR1L = 0x00;
0x054A	0x6ACF      	CLRF        TMR1H 
0x054C	0x6ACE      	CLRF        TMR1L 
;sonar.h,184 :: 		T1CON.TMR1ON = 1;
0x054E	0x80CD      	BSF         T1CON, 0 
;sonar.h,186 :: 		while ((TMR1H << 8 | TMR1L) < CM40) {
L_check_left21:
0x0550	0xF001CFCF  	MOVFF       TMR1H, R1
0x0554	0x6A00      	CLRF        R0 
0x0556	0x50CE      	MOVF        TMR1L, 0 
0x0558	0x1000      	IORWF       R0, 0 
0x055A	0x6E02      	MOVWF       R2 
0x055C	0xF003C001  	MOVFF       R1, R3
0x0560	0x0E00      	MOVLW       0
0x0562	0x1203      	IORWF       R3, 1 
0x0564	0x0E04      	MOVLW       4
0x0566	0x5C03      	SUBWF       R3, 0 
0x0568	0xE102      	BNZ         L__check_left157
0x056A	0x0E7E      	MOVLW       126
0x056C	0x5C02      	SUBWF       R2, 0 
L__check_left157:
0x056E	0xE204      	BC          L_check_left22
;sonar.h,187 :: 		if (Sonar2ECHO_PORT == 1) {continue;}
0x0570	0xA481      	BTFSS       PORTB, 2 
0x0572	0xD001      	BRA         L_check_left23
0x0574	0xD7ED      	BRA         L_check_left21
L_check_left23:
;sonar.h,190 :: 		left_flag++;
0x0576	0x2A1C      	INCF        _left_flag, 1 
;sonar.h,193 :: 		}
L_check_left22:
;sonar.h,194 :: 		i++;
0x0578	0x2A1E      	INCF        _i, 1 
;sonar.h,195 :: 		}
0x057A	0xD7D6      	BRA         L_check_left15
L_check_left16:
;sonar.h,197 :: 		if (left_flag > 2) {
0x057C	0x0E80      	MOVLW       128
0x057E	0x0A02      	XORLW       2
0x0580	0x6E00      	MOVWF       R0 
0x0582	0x0E80      	MOVLW       128
0x0584	0x181C      	XORWF       _left_flag, 0 
0x0586	0x5C00      	SUBWF       R0, 0 
0x0588	0xE203      	BC          L_check_left25
;sonar.h,198 :: 		return 1;
0x058A	0x0E01      	MOVLW       1
0x058C	0x6E00      	MOVWF       R0 
0x058E	0xD001      	BRA         L_end_check_left
;sonar.h,199 :: 		} else {
L_check_left25:
;sonar.h,200 :: 		return 0;
0x0590	0x6A00      	CLRF        R0 
;sonar.h,202 :: 		}
L_end_check_left:
0x0592	0x0012      	RETURN      0
; end of _check_left
_Llonly:
;mains.h,106 :: 		void Llonly() {
;mains.h,109 :: 		fan_job(left);
0x0594	0x6A29      	CLRF        FARG_fan_job_side 
0x0596	0xDE9D      	RCALL       _fan_job
;mains.h,111 :: 		accelerate();
0x0598	0xDF6B      	RCALL       _accelerate
;mains.h,112 :: 		}
L_end_Llonly:
0x059A	0x0012      	RETURN      0
; end of _Llonly
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x059C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x059E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x05A2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x05A4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x05A6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x05A8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x05AA	0x0012      	RETURN      0
; end of ___CC2DW
_init_main:
;FinalOne.c,19 :: 		void init_main() {
;FinalOne.c,21 :: 		init_sensor();
0x05AC	0xDE57      	RCALL       _init_sensor
;FinalOne.c,22 :: 		init_motor();
0x05AE	0xDE7A      	RCALL       _init_motor
;FinalOne.c,23 :: 		init_sonar();
0x05B0	0xDFB0      	RCALL       _init_sonar
;FinalOne.c,24 :: 		}
L_end_init_main:
0x05B2	0x0012      	RETURN      0
; end of _init_main
_left_junc:
;mains.h,142 :: 		void left_junc() {
;mains.h,145 :: 		stop_motor();
0x05B4	0xDE58      	RCALL       _stop_motor
;mains.h,147 :: 		Ll = check_left(); Delay_ms(100);
0x05B6	0xDFB4      	RCALL       _check_left
0x05B8	0xF01BC000  	MOVFF       R0, _Ll
0x05BC	0x0E82      	MOVLW       130
0x05BE	0x6E0C      	MOVWF       R12, 0
0x05C0	0x0EDD      	MOVLW       221
0x05C2	0x6E0D      	MOVWF       R13, 0
L_left_junc110:
0x05C4	0x2E0D      	DECFSZ      R13, 1, 0
0x05C6	0xD7FE      	BRA         L_left_junc110
0x05C8	0x2E0C      	DECFSZ      R12, 1, 0
0x05CA	0xD7FC      	BRA         L_left_junc110
0x05CC	0x0000      	NOP
0x05CE	0x0000      	NOP
;mains.h,149 :: 		Rr = check_right(); Delay_ms(100);
0x05D0	0xDF66      	RCALL       _check_right
0x05D2	0xF01AC000  	MOVFF       R0, _Rr
0x05D6	0x0E82      	MOVLW       130
0x05D8	0x6E0C      	MOVWF       R12, 0
0x05DA	0x0EDD      	MOVLW       221
0x05DC	0x6E0D      	MOVWF       R13, 0
L_left_junc111:
0x05DE	0x2E0D      	DECFSZ      R13, 1, 0
0x05E0	0xD7FE      	BRA         L_left_junc111
0x05E2	0x2E0C      	DECFSZ      R12, 1, 0
0x05E4	0xD7FC      	BRA         L_left_junc111
0x05E6	0x0000      	NOP
0x05E8	0x0000      	NOP
;mains.h,151 :: 		if (Ll) {
0x05EA	0x521B      	MOVF        _Ll, 1 
0x05EC	0xE002      	BZ          L_left_junc112
;mains.h,153 :: 		fan_job(left);
0x05EE	0x6A29      	CLRF        FARG_fan_job_side 
0x05F0	0xDE70      	RCALL       _fan_job
;mains.h,154 :: 		}
L_left_junc112:
;mains.h,156 :: 		if (Rr) {
0x05F2	0x521A      	MOVF        _Rr, 1 
0x05F4	0xE003      	BZ          L_left_junc113
;mains.h,158 :: 		fan_job(right);
0x05F6	0x0E01      	MOVLW       1
0x05F8	0x6E29      	MOVWF       FARG_fan_job_side 
0x05FA	0xDE6B      	RCALL       _fan_job
;mains.h,159 :: 		}
L_left_junc113:
;mains.h,161 :: 		if (Rr && Ll) {
0x05FC	0x521A      	MOVF        _Rr, 1 
0x05FE	0xE005      	BZ          L_left_junc116
0x0600	0x521B      	MOVF        _Ll, 1 
0x0602	0xE003      	BZ          L_left_junc116
L__left_junc146:
;mains.h,162 :: 		fan_job(both);
0x0604	0x0E02      	MOVLW       2
0x0606	0x6E29      	MOVWF       FARG_fan_job_side 
0x0608	0xDE64      	RCALL       _fan_job
;mains.h,163 :: 		}
L_left_junc116:
;mains.h,165 :: 		accelerate();
0x060A	0xDF32      	RCALL       _accelerate
;mains.h,166 :: 		}
L_end_left_junc:
0x060C	0x0012      	RETURN      0
; end of _left_junc
_junction:
;ir.h,216 :: 		short junction() {
;ir.h,228 :: 		IR_read();
0x060E	0xDDF5      	RCALL       _IR_read
;ir.h,230 :: 		pos = sensor1 * 1 + sensor2 * 3 + sensor3 * 5 + sensor4 * 7 +
0x0610	0xF015C017  	MOVFF       _sensor1, _pos
0x0614	0x0E03      	MOVLW       3
0x0616	0x0219      	MULWF       _sensor2 
0x0618	0xF000CFF3  	MOVFF       PRODL, R0
0x061C	0x5000      	MOVF        R0, 0 
0x061E	0x2417      	ADDWF       _sensor1, 0 
0x0620	0x6E15      	MOVWF       _pos 
0x0622	0x0E05      	MOVLW       5
0x0624	0x0218      	MULWF       _sensor3 
0x0626	0xF000CFF3  	MOVFF       PRODL, R0
0x062A	0x5000      	MOVF        R0, 0 
0x062C	0x2615      	ADDWF       _pos, 1 
0x062E	0x0E07      	MOVLW       7
0x0630	0x0225      	MULWF       _sensor4 
0x0632	0xF000CFF3  	MOVFF       PRODL, R0
0x0636	0x5000      	MOVF        R0, 0 
0x0638	0x2615      	ADDWF       _pos, 1 
;ir.h,231 :: 		sensor5 * 11 + sensor6 * 13 + sensor7 * 15 + sensor8 * 17;
0x063A	0x0E0B      	MOVLW       11
0x063C	0x0224      	MULWF       _sensor5 
0x063E	0xF000CFF3  	MOVFF       PRODL, R0
0x0642	0x5000      	MOVF        R0, 0 
0x0644	0x2615      	ADDWF       _pos, 1 
0x0646	0x0E0D      	MOVLW       13
0x0648	0x0226      	MULWF       _sensor6 
0x064A	0xF000CFF3  	MOVFF       PRODL, R0
0x064E	0x5000      	MOVF        R0, 0 
0x0650	0x2615      	ADDWF       _pos, 1 
0x0652	0x0E0F      	MOVLW       15
0x0654	0x0228      	MULWF       _sensor7 
0x0656	0xF000CFF3  	MOVFF       PRODL, R0
0x065A	0x5000      	MOVF        R0, 0 
0x065C	0x2615      	ADDWF       _pos, 1 
0x065E	0x0E11      	MOVLW       17
0x0660	0x0227      	MULWF       _sensor8 
0x0662	0xF000CFF3  	MOVFF       PRODL, R0
0x0666	0x5000      	MOVF        R0, 0 
0x0668	0x2615      	ADDWF       _pos, 1 
;ir.h,233 :: 		switch (pos) {
0x066A	0xD013      	BRA         L_junction59
;ir.h,235 :: 		case 0 : junc_val = strip; break;
L_junction61:
0x066C	0x0E02      	MOVLW       2
0x066E	0x6E20      	MOVWF       _junc_val 
0x0670	0xD023      	BRA         L_junction60
;ir.h,236 :: 		case 4 : junc_val = left; break;
L_junction62:
0x0672	0x6A20      	CLRF        _junc_val 
0x0674	0xD021      	BRA         L_junction60
;ir.h,237 :: 		case 9 : junc_val = left; break;
L_junction63:
0x0676	0x6A20      	CLRF        _junc_val 
0x0678	0xD01F      	BRA         L_junction60
;ir.h,238 :: 		case 32 : junc_val = right; break;
L_junction64:
0x067A	0x0E01      	MOVLW       1
0x067C	0x6E20      	MOVWF       _junc_val 
0x067E	0xD01C      	BRA         L_junction60
;ir.h,239 :: 		case 45 : junc_val = right; break;
L_junction65:
0x0680	0x0E01      	MOVLW       1
0x0682	0x6E20      	MOVWF       _junc_val 
0x0684	0xD019      	BRA         L_junction60
;ir.h,240 :: 		case 72 : junc_val = lost; break;
L_junction66:
0x0686	0x0E03      	MOVLW       3
0x0688	0x6E20      	MOVWF       _junc_val 
0x068A	0xD016      	BRA         L_junction60
;ir.h,241 :: 		default : junc_val = on_line;
L_junction67:
0x068C	0x0E04      	MOVLW       4
0x068E	0x6E20      	MOVWF       _junc_val 
;ir.h,242 :: 		}
0x0690	0xD013      	BRA         L_junction60
L_junction59:
0x0692	0x5015      	MOVF        _pos, 0 
0x0694	0x0A00      	XORLW       0
0x0696	0xE0EA      	BZ          L_junction61
0x0698	0x5015      	MOVF        _pos, 0 
0x069A	0x0A04      	XORLW       4
0x069C	0xE0EA      	BZ          L_junction62
0x069E	0x5015      	MOVF        _pos, 0 
0x06A0	0x0A09      	XORLW       9
0x06A2	0xE0E9      	BZ          L_junction63
0x06A4	0x5015      	MOVF        _pos, 0 
0x06A6	0x0A20      	XORLW       32
0x06A8	0xE0E8      	BZ          L_junction64
0x06AA	0x5015      	MOVF        _pos, 0 
0x06AC	0x0A2D      	XORLW       45
0x06AE	0xE0E8      	BZ          L_junction65
0x06B0	0x5015      	MOVF        _pos, 0 
0x06B2	0x0A48      	XORLW       72
0x06B4	0xE0E8      	BZ          L_junction66
0x06B6	0xD7EA      	BRA         L_junction67
L_junction60:
;ir.h,243 :: 		return junc_val;
0x06B8	0xF000C020  	MOVFF       _junc_val, R0
;ir.h,244 :: 		}
L_end_junction:
0x06BC	0x0012      	RETURN      0
; end of _junction
_right_junc:
;mains.h,115 :: 		void right_junc() {
;mains.h,118 :: 		stop_motor();
0x06BE	0xDDD3      	RCALL       _stop_motor
;mains.h,120 :: 		Rr = check_right(); Delay_ms(100);
0x06C0	0xDEEE      	RCALL       _check_right
0x06C2	0xF01AC000  	MOVFF       R0, _Rr
0x06C6	0x0E82      	MOVLW       130
0x06C8	0x6E0C      	MOVWF       R12, 0
0x06CA	0x0EDD      	MOVLW       221
0x06CC	0x6E0D      	MOVWF       R13, 0
L_right_junc103:
0x06CE	0x2E0D      	DECFSZ      R13, 1, 0
0x06D0	0xD7FE      	BRA         L_right_junc103
0x06D2	0x2E0C      	DECFSZ      R12, 1, 0
0x06D4	0xD7FC      	BRA         L_right_junc103
0x06D6	0x0000      	NOP
0x06D8	0x0000      	NOP
;mains.h,122 :: 		Ll = check_left(); Delay_ms(100);
0x06DA	0xDF22      	RCALL       _check_left
0x06DC	0xF01BC000  	MOVFF       R0, _Ll
0x06E0	0x0E82      	MOVLW       130
0x06E2	0x6E0C      	MOVWF       R12, 0
0x06E4	0x0EDD      	MOVLW       221
0x06E6	0x6E0D      	MOVWF       R13, 0
L_right_junc104:
0x06E8	0x2E0D      	DECFSZ      R13, 1, 0
0x06EA	0xD7FE      	BRA         L_right_junc104
0x06EC	0x2E0C      	DECFSZ      R12, 1, 0
0x06EE	0xD7FC      	BRA         L_right_junc104
0x06F0	0x0000      	NOP
0x06F2	0x0000      	NOP
;mains.h,124 :: 		if (Rr) {
0x06F4	0x521A      	MOVF        _Rr, 1 
0x06F6	0xE003      	BZ          L_right_junc105
;mains.h,126 :: 		fan_job(right);
0x06F8	0x0E01      	MOVLW       1
0x06FA	0x6E29      	MOVWF       FARG_fan_job_side 
0x06FC	0xDDEA      	RCALL       _fan_job
;mains.h,127 :: 		}
L_right_junc105:
;mains.h,129 :: 		if (Ll) {
0x06FE	0x521B      	MOVF        _Ll, 1 
0x0700	0xE002      	BZ          L_right_junc106
;mains.h,131 :: 		fan_job(left);
0x0702	0x6A29      	CLRF        FARG_fan_job_side 
0x0704	0xDDE6      	RCALL       _fan_job
;mains.h,132 :: 		}
L_right_junc106:
;mains.h,134 :: 		if (Rr && Ll) {
0x0706	0x521A      	MOVF        _Rr, 1 
0x0708	0xE005      	BZ          L_right_junc109
0x070A	0x521B      	MOVF        _Ll, 1 
0x070C	0xE003      	BZ          L_right_junc109
L__right_junc145:
;mains.h,135 :: 		fan_job(both);
0x070E	0x0E02      	MOVLW       2
0x0710	0x6E29      	MOVWF       FARG_fan_job_side 
0x0712	0xDDDF      	RCALL       _fan_job
;mains.h,136 :: 		}
L_right_junc109:
;mains.h,138 :: 		accelerate();
0x0714	0xDEAD      	RCALL       _accelerate
;mains.h,139 :: 		}
L_end_right_junc:
0x0716	0x0012      	RETURN      0
; end of _right_junc
_move:
;mains.h,48 :: 		void move() {
;mains.h,51 :: 		PValve = position();
0x0718	0xDE1F      	RCALL       _position
0x071A	0xF023C000  	MOVFF       R0, _PValve
;mains.h,53 :: 		move_forth();
0x071E	0xDDCC      	RCALL       _move_forth
;mains.h,56 :: 		switch (PValve) {
0x0720	0xD065      	BRA         L_move84
;mains.h,58 :: 		case 4 :
L_move86:
;mains.h,59 :: 		turn(right); Delay_ms(25);
0x0722	0x0E01      	MOVLW       1
0x0724	0x6E29      	MOVWF       FARG_turn_side 
0x0726	0xDDA6      	RCALL       _turn
0x0728	0x0E21      	MOVLW       33
0x072A	0x6E0C      	MOVWF       R12, 0
0x072C	0x0E76      	MOVLW       118
0x072E	0x6E0D      	MOVWF       R13, 0
L_move87:
0x0730	0x2E0D      	DECFSZ      R13, 1, 0
0x0732	0xD7FE      	BRA         L_move87
0x0734	0x2E0C      	DECFSZ      R12, 1, 0
0x0736	0xD7FC      	BRA         L_move87
0x0738	0x0000      	NOP
;mains.h,60 :: 		break;
0x073A	0xD071      	BRA         L_move85
;mains.h,61 :: 		case -4 :
L_move88:
;mains.h,62 :: 		turn(left); Delay_ms(25);
0x073C	0x6A29      	CLRF        FARG_turn_side 
0x073E	0xDD9A      	RCALL       _turn
0x0740	0x0E21      	MOVLW       33
0x0742	0x6E0C      	MOVWF       R12, 0
0x0744	0x0E76      	MOVLW       118
0x0746	0x6E0D      	MOVWF       R13, 0
L_move89:
0x0748	0x2E0D      	DECFSZ      R13, 1, 0
0x074A	0xD7FE      	BRA         L_move89
0x074C	0x2E0C      	DECFSZ      R12, 1, 0
0x074E	0xD7FC      	BRA         L_move89
0x0750	0x0000      	NOP
;mains.h,63 :: 		break;
0x0752	0xD065      	BRA         L_move85
;mains.h,64 :: 		case 3 :
L_move90:
;mains.h,65 :: 		turn(right); Delay_ms(25);
0x0754	0x0E01      	MOVLW       1
0x0756	0x6E29      	MOVWF       FARG_turn_side 
0x0758	0xDD8D      	RCALL       _turn
0x075A	0x0E21      	MOVLW       33
0x075C	0x6E0C      	MOVWF       R12, 0
0x075E	0x0E76      	MOVLW       118
0x0760	0x6E0D      	MOVWF       R13, 0
L_move91:
0x0762	0x2E0D      	DECFSZ      R13, 1, 0
0x0764	0xD7FE      	BRA         L_move91
0x0766	0x2E0C      	DECFSZ      R12, 1, 0
0x0768	0xD7FC      	BRA         L_move91
0x076A	0x0000      	NOP
;mains.h,66 :: 		break;
0x076C	0xD058      	BRA         L_move85
;mains.h,67 :: 		case -3 :
L_move92:
;mains.h,68 :: 		turn(left); Delay_ms(25);
0x076E	0x6A29      	CLRF        FARG_turn_side 
0x0770	0xDD81      	RCALL       _turn
0x0772	0x0E21      	MOVLW       33
0x0774	0x6E0C      	MOVWF       R12, 0
0x0776	0x0E76      	MOVLW       118
0x0778	0x6E0D      	MOVWF       R13, 0
L_move93:
0x077A	0x2E0D      	DECFSZ      R13, 1, 0
0x077C	0xD7FE      	BRA         L_move93
0x077E	0x2E0C      	DECFSZ      R12, 1, 0
0x0780	0xD7FC      	BRA         L_move93
0x0782	0x0000      	NOP
;mains.h,69 :: 		break;
0x0784	0xD04C      	BRA         L_move85
;mains.h,70 :: 		case 2 :
L_move94:
;mains.h,71 :: 		turn(right); Delay_ms(29);
0x0786	0x0E01      	MOVLW       1
0x0788	0x6E29      	MOVWF       FARG_turn_side 
0x078A	0xDD74      	RCALL       _turn
0x078C	0x0E26      	MOVLW       38
0x078E	0x6E0C      	MOVWF       R12, 0
0x0790	0x0EA8      	MOVLW       168
0x0792	0x6E0D      	MOVWF       R13, 0
L_move95:
0x0794	0x2E0D      	DECFSZ      R13, 1, 0
0x0796	0xD7FE      	BRA         L_move95
0x0798	0x2E0C      	DECFSZ      R12, 1, 0
0x079A	0xD7FC      	BRA         L_move95
0x079C	0x0000      	NOP
;mains.h,72 :: 		break;
0x079E	0xD03F      	BRA         L_move85
;mains.h,73 :: 		case -2 :
L_move96:
;mains.h,74 :: 		turn(left); Delay_ms(29);
0x07A0	0x6A29      	CLRF        FARG_turn_side 
0x07A2	0xDD68      	RCALL       _turn
0x07A4	0x0E26      	MOVLW       38
0x07A6	0x6E0C      	MOVWF       R12, 0
0x07A8	0x0EA8      	MOVLW       168
0x07AA	0x6E0D      	MOVWF       R13, 0
L_move97:
0x07AC	0x2E0D      	DECFSZ      R13, 1, 0
0x07AE	0xD7FE      	BRA         L_move97
0x07B0	0x2E0C      	DECFSZ      R12, 1, 0
0x07B2	0xD7FC      	BRA         L_move97
0x07B4	0x0000      	NOP
;mains.h,75 :: 		break;
0x07B6	0xD033      	BRA         L_move85
;mains.h,76 :: 		case 1 :
L_move98:
;mains.h,77 :: 		turn(right); Delay_ms(29);
0x07B8	0x0E01      	MOVLW       1
0x07BA	0x6E29      	MOVWF       FARG_turn_side 
0x07BC	0xDD5B      	RCALL       _turn
0x07BE	0x0E26      	MOVLW       38
0x07C0	0x6E0C      	MOVWF       R12, 0
0x07C2	0x0EA8      	MOVLW       168
0x07C4	0x6E0D      	MOVWF       R13, 0
L_move99:
0x07C6	0x2E0D      	DECFSZ      R13, 1, 0
0x07C8	0xD7FE      	BRA         L_move99
0x07CA	0x2E0C      	DECFSZ      R12, 1, 0
0x07CC	0xD7FC      	BRA         L_move99
0x07CE	0x0000      	NOP
;mains.h,78 :: 		break;
0x07D0	0xD026      	BRA         L_move85
;mains.h,79 :: 		case -1 :
L_move100:
;mains.h,80 :: 		turn(left); Delay_ms(29);
0x07D2	0x6A29      	CLRF        FARG_turn_side 
0x07D4	0xDD4F      	RCALL       _turn
0x07D6	0x0E26      	MOVLW       38
0x07D8	0x6E0C      	MOVWF       R12, 0
0x07DA	0x0EA8      	MOVLW       168
0x07DC	0x6E0D      	MOVWF       R13, 0
L_move101:
0x07DE	0x2E0D      	DECFSZ      R13, 1, 0
0x07E0	0xD7FE      	BRA         L_move101
0x07E2	0x2E0C      	DECFSZ      R12, 1, 0
0x07E4	0xD7FC      	BRA         L_move101
0x07E6	0x0000      	NOP
;mains.h,81 :: 		break;
0x07E8	0xD01A      	BRA         L_move85
;mains.h,82 :: 		default :
L_move102:
;mains.h,83 :: 		break;
0x07EA	0xD019      	BRA         L_move85
;mains.h,84 :: 		}
L_move84:
0x07EC	0x5023      	MOVF        _PValve, 0 
0x07EE	0x0A04      	XORLW       4
0x07F0	0xE098      	BZ          L_move86
0x07F2	0x5023      	MOVF        _PValve, 0 
0x07F4	0x0AFC      	XORLW       252
0x07F6	0xE0A2      	BZ          L_move88
0x07F8	0x5023      	MOVF        _PValve, 0 
0x07FA	0x0A03      	XORLW       3
0x07FC	0xE0AB      	BZ          L_move90
0x07FE	0x5023      	MOVF        _PValve, 0 
0x0800	0x0AFD      	XORLW       253
0x0802	0xE0B5      	BZ          L_move92
0x0804	0x5023      	MOVF        _PValve, 0 
0x0806	0x0A02      	XORLW       2
0x0808	0xE0BE      	BZ          L_move94
0x080A	0x5023      	MOVF        _PValve, 0 
0x080C	0x0AFE      	XORLW       254
0x080E	0xE0C8      	BZ          L_move96
0x0810	0x5023      	MOVF        _PValve, 0 
0x0812	0x0A01      	XORLW       1
0x0814	0xE0D1      	BZ          L_move98
0x0816	0x5023      	MOVF        _PValve, 0 
0x0818	0x0AFF      	XORLW       255
0x081A	0xE0DB      	BZ          L_move100
0x081C	0xD7E6      	BRA         L_move102
L_move85:
;mains.h,85 :: 		}
L_end_move:
0x081E	0x0012      	RETURN      0
; end of _move
_Rronly:
;mains.h,97 :: 		void Rronly() {
;mains.h,100 :: 		fan_job(right);
0x0820	0x0E01      	MOVLW       1
0x0822	0x6E29      	MOVWF       FARG_fan_job_side 
0x0824	0xDD56      	RCALL       _fan_job
;mains.h,102 :: 		accelerate();
0x0826	0xDE24      	RCALL       _accelerate
;mains.h,103 :: 		}
L_end_Rronly:
0x0828	0x0012      	RETURN      0
; end of _Rronly
_RrandLl:
;mains.h,88 :: 		void RrandLl() {
;mains.h,91 :: 		fan_job(both);
0x082A	0x0E02      	MOVLW       2
0x082C	0x6E29      	MOVWF       FARG_fan_job_side 
0x082E	0xDD51      	RCALL       _fan_job
;mains.h,93 :: 		accelerate();
0x0830	0xDE1F      	RCALL       _accelerate
;mains.h,94 :: 		}
L_end_RrandLl:
0x0832	0x0012      	RETURN      0
; end of _RrandLl
_main:
;FinalOne.c,26 :: 		void main() {
;FinalOne.c,29 :: 		init_main();
0x0834	0xDEBB      	RCALL       _init_main
;FinalOne.c,30 :: 		first_line = 1;
0x0836	0x0E01      	MOVLW       1
0x0838	0x6E1F      	MOVWF       _first_line 
;FinalOne.c,31 :: 		accelerate();
0x083A	0xDE1A      	RCALL       _accelerate
;FinalOne.c,33 :: 		while (ON) {
L_main117:
;FinalOne.c,36 :: 		while (first_line) {
L_main119:
0x083C	0x521F      	MOVF        _first_line, 1 
0x083E	0xE016      	BZ          L_main120
;FinalOne.c,37 :: 		move();
0x0840	0xDF6B      	RCALL       _move
;FinalOne.c,38 :: 		junc_value = junction();
0x0842	0xDEE5      	RCALL       _junction
0x0844	0xF021C000  	MOVFF       R0, _junc_value
;FinalOne.c,39 :: 		if (junc_value == strip) {
0x0848	0x5000      	MOVF        R0, 0 
0x084A	0x0A02      	XORLW       2
0x084C	0xE10E      	BNZ         L_main121
;FinalOne.c,40 :: 		move();
0x084E	0xDF64      	RCALL       _move
;FinalOne.c,41 :: 		Delay_ms(300);
0x0850	0x0E02      	MOVLW       2
0x0852	0x6E0B      	MOVWF       R11, 0
0x0854	0x0E86      	MOVLW       134
0x0856	0x6E0C      	MOVWF       R12, 0
0x0858	0x0E99      	MOVLW       153
0x085A	0x6E0D      	MOVWF       R13, 0
L_main122:
0x085C	0x2E0D      	DECFSZ      R13, 1, 0
0x085E	0xD7FE      	BRA         L_main122
0x0860	0x2E0C      	DECFSZ      R12, 1, 0
0x0862	0xD7FC      	BRA         L_main122
0x0864	0x2E0B      	DECFSZ      R11, 1, 0
0x0866	0xD7FA      	BRA         L_main122
;FinalOne.c,42 :: 		first_line = 0;
0x0868	0x6A1F      	CLRF        _first_line 
;FinalOne.c,43 :: 		}
L_main121:
;FinalOne.c,44 :: 		}
0x086A	0xD7E8      	BRA         L_main119
L_main120:
;FinalOne.c,47 :: 		junc_value = junction();
0x086C	0xDED0      	RCALL       _junction
0x086E	0xF021C000  	MOVFF       R0, _junc_value
;FinalOne.c,50 :: 		if (junc_value == on_line) {
0x0872	0x5000      	MOVF        R0, 0 
0x0874	0x0A04      	XORLW       4
0x0876	0xE102      	BNZ         L_main123
;FinalOne.c,51 :: 		move();
0x0878	0xDF4F      	RCALL       _move
;FinalOne.c,52 :: 		}
0x087A	0xD056      	BRA         L_main124
L_main123:
;FinalOne.c,55 :: 		else if (junc_value == right) {
0x087C	0x5021      	MOVF        _junc_value, 0 
0x087E	0x0A01      	XORLW       1
0x0880	0xE102      	BNZ         L_main125
;FinalOne.c,56 :: 		right_junc();
0x0882	0xDF1D      	RCALL       _right_junc
;FinalOne.c,57 :: 		}
0x0884	0xD051      	BRA         L_main126
L_main125:
;FinalOne.c,60 :: 		else if (junc_value == left) {
0x0886	0x5021      	MOVF        _junc_value, 0 
0x0888	0x0A00      	XORLW       0
0x088A	0xE102      	BNZ         L_main127
;FinalOne.c,61 :: 		left_junc();
0x088C	0xDE93      	RCALL       _left_junc
;FinalOne.c,62 :: 		}
0x088E	0xD04C      	BRA         L_main128
L_main127:
;FinalOne.c,65 :: 		else if (junc_value == strip) {
0x0890	0x5021      	MOVF        _junc_value, 0 
0x0892	0x0A02      	XORLW       2
0x0894	0xE13B      	BNZ         L_main129
;FinalOne.c,68 :: 		stop_motor(); Delay_ms(15);
0x0896	0xDCE7      	RCALL       _stop_motor
0x0898	0x0E14      	MOVLW       20
0x089A	0x6E0C      	MOVWF       R12, 0
0x089C	0x0E79      	MOVLW       121
0x089E	0x6E0D      	MOVWF       R13, 0
L_main130:
0x08A0	0x2E0D      	DECFSZ      R13, 1, 0
0x08A2	0xD7FE      	BRA         L_main130
0x08A4	0x2E0C      	DECFSZ      R12, 1, 0
0x08A6	0xD7FC      	BRA         L_main130
0x08A8	0x0000      	NOP
0x08AA	0x0000      	NOP
;FinalOne.c,70 :: 		Ll = check_left(); Delay_ms(200);
0x08AC	0xDE39      	RCALL       _check_left
0x08AE	0xF01BC000  	MOVFF       R0, _Ll
0x08B2	0x0E02      	MOVLW       2
0x08B4	0x6E0B      	MOVWF       R11, 0
0x08B6	0x0E04      	MOVLW       4
0x08B8	0x6E0C      	MOVWF       R12, 0
0x08BA	0x0EBA      	MOVLW       186
0x08BC	0x6E0D      	MOVWF       R13, 0
L_main131:
0x08BE	0x2E0D      	DECFSZ      R13, 1, 0
0x08C0	0xD7FE      	BRA         L_main131
0x08C2	0x2E0C      	DECFSZ      R12, 1, 0
0x08C4	0xD7FC      	BRA         L_main131
0x08C6	0x2E0B      	DECFSZ      R11, 1, 0
0x08C8	0xD7FA      	BRA         L_main131
0x08CA	0x0000      	NOP
;FinalOne.c,72 :: 		Rr = check_right(); Delay_ms(200);
0x08CC	0xDDE8      	RCALL       _check_right
0x08CE	0xF01AC000  	MOVFF       R0, _Rr
0x08D2	0x0E02      	MOVLW       2
0x08D4	0x6E0B      	MOVWF       R11, 0
0x08D6	0x0E04      	MOVLW       4
0x08D8	0x6E0C      	MOVWF       R12, 0
0x08DA	0x0EBA      	MOVLW       186
0x08DC	0x6E0D      	MOVWF       R13, 0
L_main132:
0x08DE	0x2E0D      	DECFSZ      R13, 1, 0
0x08E0	0xD7FE      	BRA         L_main132
0x08E2	0x2E0C      	DECFSZ      R12, 1, 0
0x08E4	0xD7FC      	BRA         L_main132
0x08E6	0x2E0B      	DECFSZ      R11, 1, 0
0x08E8	0xD7FA      	BRA         L_main132
0x08EA	0x0000      	NOP
;FinalOne.c,75 :: 		if (Rr && Ll) {
0x08EC	0x521A      	MOVF        _Rr, 1 
0x08EE	0xE003      	BZ          L_main135
0x08F0	0x521B      	MOVF        _Ll, 1 
0x08F2	0xE001      	BZ          L_main135
L__main149:
;FinalOne.c,76 :: 		RrandLl();
0x08F4	0xDF9A      	RCALL       _RrandLl
;FinalOne.c,77 :: 		}
L_main135:
;FinalOne.c,78 :: 		if (Rr && !Ll) {
0x08F6	0x521A      	MOVF        _Rr, 1 
0x08F8	0xE003      	BZ          L_main138
0x08FA	0x521B      	MOVF        _Ll, 1 
0x08FC	0xE101      	BNZ         L_main138
L__main148:
;FinalOne.c,79 :: 		Rronly();
0x08FE	0xDF90      	RCALL       _Rronly
;FinalOne.c,80 :: 		}
L_main138:
;FinalOne.c,81 :: 		if (!Rr && Ll) {
0x0900	0x521A      	MOVF        _Rr, 1 
0x0902	0xE103      	BNZ         L_main141
0x0904	0x521B      	MOVF        _Ll, 1 
0x0906	0xE001      	BZ          L_main141
L__main147:
;FinalOne.c,82 :: 		Llonly();
0x0908	0xDE45      	RCALL       _Llonly
;FinalOne.c,83 :: 		}
L_main141:
;FinalOne.c,84 :: 		}
0x090A	0xD00E      	BRA         L_main142
L_main129:
;FinalOne.c,86 :: 		else if (junc_value == lost) {
0x090C	0x5021      	MOVF        _junc_value, 0 
0x090E	0x0A03      	XORLW       3
0x0910	0xE10B      	BNZ         L_main143
;FinalOne.c,89 :: 		Delay_ms(100);
0x0912	0x0E82      	MOVLW       130
0x0914	0x6E0C      	MOVWF       R12, 0
0x0916	0x0EDD      	MOVLW       221
0x0918	0x6E0D      	MOVWF       R13, 0
L_main144:
0x091A	0x2E0D      	DECFSZ      R13, 1, 0
0x091C	0xD7FE      	BRA         L_main144
0x091E	0x2E0C      	DECFSZ      R12, 1, 0
0x0920	0xD7FC      	BRA         L_main144
0x0922	0x0000      	NOP
0x0924	0x0000      	NOP
;FinalOne.c,91 :: 		stop_motor();
0x0926	0xDC9F      	RCALL       _stop_motor
;FinalOne.c,92 :: 		}
L_main143:
L_main142:
L_main128:
L_main126:
L_main124:
;FinalOne.c,93 :: 		}
0x0928	0xD789      	BRA         L_main117
;FinalOne.c,94 :: 		}
L_end_main:
0x092A	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [34]    _IR_low
0x003E      [66]    _sensor_assign
0x0080      [80]    _Mul_16X16_U
0x00D0       [8]    _PWM1_Init
0x00D8       [8]    _PWM2_Init
0x00E0      [34]    _IR_high
0x0102      [10]    _PWM2_Start
0x010C     [108]    _PWM1_Set_Duty
0x0178     [108]    _PWM2_Set_Duty
0x01E4      [22]    _init_PWM
0x01FA      [32]    _IR_read
0x021A      [10]    _PWM1_Start
0x0224      [10]    _PWM1_Stop
0x022E      [10]    _PWM2_Stop
0x0238      [18]    _Trigger_1
0x024A      [18]    _Trigger_2
0x025C      [10]    _init_sensor
0x0266      [14]    _stop_motor
0x0274      [48]    _turn
0x02A4      [20]    _init_motor
0x02B8      [26]    _move_forth
0x02D2     [134]    _fan_job
0x0358     [280]    _position
0x0470      [46]    _accelerate
0x049E     [116]    _check_right
0x0512      [14]    _init_sonar
0x0520     [116]    _check_left
0x0594       [8]    _Llonly
0x059C      [16]    ___CC2DW
0x05AC       [8]    _init_main
0x05B4      [90]    _left_junc
0x060E     [176]    _junction
0x06BE      [90]    _right_junc
0x0718     [264]    _move
0x0820      [10]    _Rronly
0x082A      [10]    _RrandLl
0x0834     [248]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    FLASH_Write_8_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Write_8_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    memmove_tt_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    R4
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [1]    R5
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [1]    R6
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _pos
0x0016       [1]    _j
0x0017       [1]    _sensor1
0x0018       [1]    _sensor3
0x0019       [1]    _sensor2
0x001A       [1]    _Rr
0x001B       [1]    _Ll
0x001C       [1]    _left_flag
0x001D       [1]    _right_flag
0x001E       [1]    _i
0x001F       [1]    _first_line
0x0020       [1]    _junc_val
0x0021       [1]    _junc_value
0x0022       [1]    _pos_val
0x0023       [1]    _PValve
0x0024       [1]    _sensor5
0x0025       [1]    _sensor4
0x0026       [1]    _sensor6
0x0027       [1]    _sensor8
0x0028       [1]    _sensor7
0x0029       [1]    FARG_fan_job_side
0x0029       [1]    FARG_turn_side
0x002A       [1]    FARG_PWM2_Set_Duty_new_duty
0x002A       [1]    FARG_PWM1_Set_Duty_new_duty
0x002B       [4]    FARG_PWM2_Init_PWM_Freq
0x002B       [4]    FARG_PWM1_Init_PWM_Freq
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F84       [1]    PORTE
0x0F89       [1]    LATA
0x0F8A       [1]    LATB
0x0F8B       [1]    LATC
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FB8       [1]    ANSEL0
0x0FB9       [1]    ANSEL1
0x0FBA       [1]    CCP2CON
0x0FBB       [1]    CCPR2L
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
